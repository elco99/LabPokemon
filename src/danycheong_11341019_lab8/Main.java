package danycheong_11341019_lab8;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dany
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        RefreshT();
        RefreshP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Batalla = new javax.swing.JDialog();
        imagen = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        hp = new javax.swing.JTextField();
        nivel = new javax.swing.JTextField();
        roca = new javax.swing.JButton();
        comida = new javax.swing.JButton();
        bola = new javax.swing.JButton();
        run = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Reporte = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        Pokedex = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        Leer = new javax.swing.JButton();
        Iniciar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        opcion = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        imagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        nombre.setEnabled(false);

        hp.setEnabled(false);

        nivel.setEnabled(false);

        roca.setText("Lanzar Roca");
        roca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rocaActionPerformed(evt);
            }
        });

        comida.setText("Lanzar Comida");
        comida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comidaActionPerformed(evt);
            }
        });

        bola.setText("Lanzar Safari Ball");
        bola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolaActionPerformed(evt);
            }
        });

        run.setText("Huir");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setRows(5);
        area.setEnabled(false);
        jScrollPane2.setViewportView(area);

        javax.swing.GroupLayout BatallaLayout = new javax.swing.GroupLayout(Batalla.getContentPane());
        Batalla.getContentPane().setLayout(BatallaLayout);
        BatallaLayout.setHorizontalGroup(
            BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BatallaLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BatallaLayout.createSequentialGroup()
                        .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66)
                        .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comida, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(BatallaLayout.createSequentialGroup()
                        .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        BatallaLayout.setVerticalGroup(
            BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BatallaLayout.createSequentialGroup()
                .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BatallaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BatallaLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BatallaLayout.createSequentialGroup()
                                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(91, 91, 91)
                        .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roca)
                            .addComponent(comida))
                        .addGap(46, 46, 46)
                        .addGroup(BatallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bola)
                            .addComponent(run))))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Objetos", "Cantidad"
            }
        ));
        jScrollPane3.setViewportView(tabla);

        javax.swing.GroupLayout ReporteLayout = new javax.swing.GroupLayout(Reporte.getContentPane());
        Reporte.getContentPane().setLayout(ReporteLayout);
        ReporteLayout.setHorizontalGroup(
            ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReporteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ReporteLayout.setVerticalGroup(
            ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReporteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pokemon"
            }
        ));
        jScrollPane4.setViewportView(tabla1);

        javax.swing.GroupLayout PokedexLayout = new javax.swing.GroupLayout(Pokedex.getContentPane());
        Pokedex.getContentPane().setLayout(PokedexLayout);
        PokedexLayout.setHorizontalGroup(
            PokedexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PokedexLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        PokedexLayout.setVerticalGroup(
            PokedexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PokedexLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Leer.setText("Leer Recurso");
        Leer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LeerMouseClicked(evt);
            }
        });

        Iniciar.setText("Iniciar");
        Iniciar.setEnabled(false);
        Iniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IniciarMouseClicked(evt);
            }
        });

        opcion.setText("Opciones");
        opcion.setEnabled(false);

        jMenu2.setText("Buscar");

        jMenuItem1.setText("Pokemon en grama");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem7.setText("Objetos");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        opcion.add(jMenu2);

        jMenuItem2.setText("Pescar");
        opcion.add(jMenuItem2);

        jMenuItem3.setText("Guardar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        opcion.add(jMenuItem3);

        jMenuItem4.setText("Reporte Objeto");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        opcion.add(jMenuItem4);

        jMenuItem5.setText("Pokedex");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        opcion.add(jMenuItem5);

        jMenuItem6.setText("Salir");
        opcion.add(jMenuItem6);

        jMenuBar1.add(opcion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Leer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(Leer)
                .addGap(39, 39, 39)
                .addComponent(Iniciar)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LeerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeerMouseClicked
        // TODO add your handling code here:
        Iniciar.setEnabled(true);
        File archivo = null;
        Scanner sc = null;

        try {
            archivo = new File("./src/Recursos/Ataques.txt");
            sc = new Scanner(archivo);

            while (sc.hasNext()) {
                String Linea = sc.nextLine();
                String[] linea2 = Linea.split(",");
                String nombre = linea2[0];
                String tipo = linea2[1];
                int PP = Integer.parseInt(linea2[2]);
                int poder = Integer.parseInt(linea2[3]);
                int precision = Integer.parseInt(linea2[4]);

                ataque.add(new Ataques(nombre, tipo, PP, poder, precision));
            }

        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {

            sc.close();
        }

        try {
            archivo = new File("./src/Recursos/Objetos.txt");

            sc = new Scanner(archivo);

            while (sc.hasNext()) {
                objeto.add(new Objeto(sc.nextLine()));
            }

        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            sc.close();
        }

        try {
            archivo = new File("./src/Recursos/Pokemons.txt");

            sc = new Scanner(archivo);

            while (sc.hasNext()) {
                String Linea = sc.nextLine();
                String[] Linea2 = Linea.split(",");

                String nombre = Linea2[0];
                String tipo1 = Linea2[1];
                String tipo2 = Linea2[2];
                int rareza = Integer.parseInt(Linea2[3]);

                ImageIcon imagen = new ImageIcon("./src/Recursos/sprites/" + nombre + ".png");
                Random r = new Random();
                int a = 0, v = 0;

                while (a < 4) {

                    int s = r.nextInt(ataque.size());
                    if (tipo1.equals(ataque.get(s).getTipo()) || tipo2.equals(ataque.get(s).getTipo())) {
                        for (int j = 0; j < temporal.size(); j++) {
                            if (temporal.get(j).getNombre().equals(ataque.get(s).getNombre())) {
                                v = 1;
                            }

                        }

                        if (v == 1) {
                            v = 0;
                        } else {
                            temporal.add(ataque.get(s));
                            a++;

                        }

                    }

                }
                temporal = new ArrayList();
                pokemon.add(new Pokemon(nombre, tipo1, tipo2, rareza, imagen, temporal));

            }
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {

            sc.close();
        }

    }//GEN-LAST:event_LeerMouseClicked

    private void IniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IniciarMouseClicked
        // TODO add your handling code here
        File archivo = null;
         try {
            archivo = new File("./src/Recursos/Mochila.bin");

            if (!archivo.exists()) {
                FileOutputStream salida = new FileOutputStream(archivo);
                ObjectOutputStream object = new ObjectOutputStream(salida);
                for (int i = 0; i < objeto.size(); i++) {                    
                    if(i == objeto.size()){
                        objeto.get(i).setCantidad(31);
                    }else{
                        object.writeObject(objeto.get(i));
                    }                    
                }
                object.flush();
                object.close();
                salida.close();

            } else {
                FileInputStream entrada = new FileInputStream(archivo);
                ObjectInputStream object = new ObjectInputStream(entrada);
                Objeto temp;
                try {
                    while ((temp = (Objeto) object.readObject()) != null) {
                        mochila.add(temp);
                    }                    
                } catch (Exception ex) {

                } finally {
                    entrada.close();
                    object.close();
                }
                mochila.get(mochila.size()-1).setCantidad( mochila.get(mochila.size()-1).getCantidad() + 30);


            }            
        } catch (Exception ex) {

        } finally {
            JOptionPane.showMessageDialog(this, "La Mochilla se ha llenado.");

        }
        try {
            archivo = new File("./src/Recursos/Pokedex.bin");

            if (!archivo.exists()) {

            } else {
                FileInputStream entrada = new FileInputStream(archivo);
                ObjectInputStream object = new ObjectInputStream(entrada);
                Pokemon temp;
                ArrayList<Pokemon> pokemon_atrapado = new ArrayList<Pokemon>();
                try {
                    while ((temp = (Pokemon) object.readObject()) != null) {
                        pokemon_atrapado.add(temp);
                    }
                } catch (Exception ex) {

                } finally {
                    entrada.close();
                    object.close();
                }

                FileOutputStream salida = new FileOutputStream(archivo);
                ObjectOutputStream objectt = new ObjectOutputStream(salida);
                for (int i = 0; i < pokemon_atrapado.size(); i++) {
                    objectt.writeObject(pokemon_atrapado.get(i));
                }
                objectt.flush();
                salida.close();
                object.close();

            }

        } catch (Exception ex) {

        } finally {
            JOptionPane.showMessageDialog(this, "El pokedex se ha actualizado");

        }

        opcion.setEnabled(true);


    }//GEN-LAST:event_IniciarMouseClicked
    Random r = new Random();
    int x = 0;
    int a = 0;
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        roca.setEnabled(true);
        comida.setEnabled(true);
        bola.setEnabled(true);
        run.setEnabled(true);

        area.setText("");
        x = r.nextInt(pokemon.size());
        a = x;
        imagen.setIcon(pokemon.get(x).getSprite());
        nombre.setText(pokemon.get(x).getNombre());
        nivel.setText(pokemon.get(x).getNivel() + "");
        hp.setText(pokemon.get(x).getHp() + "/" + pokemon.get(x).getHp());

        area.append(nombre.getText() + " salvaje, ha aparecido\n");

        Batalla.setModal(true);
        Batalla.pack();
        Batalla.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void rocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rocaActionPerformed
        // TODO add your handling code here:

        int esq = r.nextInt(3);
        String[] accion = {nombre.getText() + " parece tener confianza en usted\n",
            nombre.getText() + " se ha asustado\n",
            nombre.getText() + " usó " + (pokemon.get(a).getAtaques().get(esq).getNombre()) + ", pero usted lo esquivó\n."
        };
        int xx = r.nextInt(3);
        String[] hit = hp.getText().split("/");

        Double htp = Double.parseDouble(hit[0]) - (pokemon.get(x).getHp() * 0.20);

        if (Integer.parseInt(hit[0]) <= 0) {
            hp.setText("0" + "/" + pokemon.get(x).getHp());
            area.append(nombre.getText() + " se debilito.\n");
            roca.setEnabled(false);
        } else {
            hp.setText(htp.shortValue() + "/" + pokemon.get(x).getHp());
            area.append(accion[xx]);
        }
    }//GEN-LAST:event_rocaActionPerformed

    private void comidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comidaActionPerformed
        // TODO add your handling code here:
        int esq = r.nextInt(3);
        BE = 1;
        String[] accion = {nombre.getText() + " parece tener confianza en usted\n",
            nombre.getText() + " se ha asustado\n",
            nombre.getText() + " usó " + (pokemon.get(a).getAtaques().get(esq).getNombre()) + ", pero usted lo esquivó\n."
        };
        int xx = r.nextInt(3);
        String[] hit = hp.getText().split("/");

        Double htp = Double.parseDouble(hit[0]) + (pokemon.get(x).getHp() * 0.05);

        if (Integer.parseInt(hit[0]) <= 0) {
            hp.setText("0" + "/" + pokemon.get(x).getHp());
            area.append(nombre.getText() + " se debilito.\n");
            roca.setEnabled(false);
        } else {
            hp.setText(htp.shortValue() + "/" + pokemon.get(x).getHp());
            area.append(accion[xx]);
            BE = 2;
        }
    }//GEN-LAST:event_comidaActionPerformed

    private void bolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolaActionPerformed
        // TODO add your handling code here:
        int esq = r.nextInt(3);
        int gg = r.nextInt(3);
        String[] accion = {nombre.getText() + " parece tener confianza en usted\n",
            nombre.getText() + " se ha asustado\n",
            nombre.getText() + " usó " + (pokemon.get(a).getAtaques().get(esq).getNombre()) + ", pero usted lo esquivó\n."
        };
        String[] hit = hp.getText().split("/");
        double yy = (((3 * pokemon.get(a).getHp()) - (2 * Integer.parseInt(hit[0]))) * pokemon.get(a).getRareza() * 2 * BE) / (3 * pokemon.get(a).getHp());

        if (yy >= 255) {
            area.append(pokemon.get(a).getNombre() + "fue atrapado\n");
            pokemon_atrapado.add(pokemon.get(a));
            RefreshP();
            JOptionPane.showInputDialog("Desea ponerle nickname? (No hace nada)");
            Batalla.dispose();

        } else {
            int n1 = 0 + r.nextInt(65535);
            int n2 = 0 + r.nextInt(65535);
            int n3 = 0 + r.nextInt(65535);
            int n4 = 0 + r.nextInt(65535);
            int uu = 0;
            double kk = (yy / (Math.pow(2, 8) - 1));
            double xx = Math.pow(2, 16) * Math.pow(kk, (1 / 4));
            if (xx >= n1) {
                uu++;
            }
            if (xx >= n2) {
                uu++;
            }
            if (xx >= n3) {
                uu++;
            }
            if (xx >= n4) {
                uu++;
            }

            switch (uu) {
                case 0:
                    area.append("Oh No! " + pokemon.get(a).getNombre() + " se libero!\n");
                    break;
                case 1:
                    area.append("Oh No! " + pokemon.get(a).getNombre() + " se libero!\n");
                    break;
                case 2:
                    area.append("Casi lo tenía.\n");
                    break;
                case 3:
                    area.append("Parecía estar atrapado!\n");
                    break;
                case 4:
                    area.append(pokemon.get(a).getNombre() + "  fue atrapado!\n");
                    RefreshP();
                    pokemon_atrapado.add(pokemon.get(a));
                    batalla++;
                    JOptionPane.showInputDialog("Desea ponerle nickname? (No hace nada)");
                    Batalla.dispose();

                    File archivo = new File("batalla_N.txt");
                    Scanner sc = null;

                    FileWriter fw = null;
                    BufferedWriter bw = null;
                    try {
                        fw = new FileWriter(archivo, false);
                        bw = new BufferedWriter(fw);

                        bw.write(batalla + ";");
                        bw.write(area.getText() + ";");

                        bw.flush();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    } finally {
                        try {
                            fw.close();
                            bw.close();
                        } catch (Exception ex) {

                        }

                    }

                    break;
            }
        }
        mochila.get(mochila.size() - 1).setCantidad(mochila.get(mochila.size() - 1).getCantidad() - 1);
        area.append(accion[gg]);
    }//GEN-LAST:event_bolaActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
        // TODO add your handling code here:
        Batalla.dispose();

    }//GEN-LAST:event_runActionPerformed
    public void RefreshT() {
        String[] head = {"Objeto", "Cantidad"};
        DefaultTableModel model = new DefaultTableModel(head, 0);
        for (int i = 0; i < mochila.size(); i++) {
            Object[] lista = {mochila.get(i).getNombre(), mochila.get(i).getCantidad()};
            model.addRow(lista);
        }

        tabla.setModel(model);
    }
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        RefreshT();
        Reporte.setModal(true);
        Reporte.pack();
        Reporte.setVisible(true);


    }//GEN-LAST:event_jMenuItem4ActionPerformed

    public void RefreshP() {
        String[] head = {"Nombre"};
        DefaultTableModel model = new DefaultTableModel(head, 0);
        for (int i = 0; i < pokemon_atrapado.size(); i++) {
            Object[] lista = {pokemon_atrapado.get(i).getNombre()};
            model.addRow(lista);
        }

        tabla1.setModel(model);
    }

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        int rando = r.nextInt(mochila.size());
        for (int i = 0; i < objeto.size(); i++) {
            if (mochila.get(i).getNombre().equals(objeto.get(rando).getNombre())) {
                mochila.get(rando).setCantidad(mochila.get(rando).getCantidad() + 1);

            }
        }

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        RefreshP();
        Pokedex.setModal(true);
        Pokedex.pack();
        Pokedex.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        RefreshT();
        RefreshP();
        File archivo = null;
        try {
            archivo = new File("./src/Recursos/Pokedex.bin");

            if (!archivo.exists()) {
                FileOutputStream salida = new FileOutputStream(archivo);
                ObjectOutputStream object = new ObjectOutputStream(salida);
                for (int i = 0; i < pokemon_atrapado.size(); i++) {

                    object.writeObject(pokemon_atrapado.get(i));

                }
                object.flush();
                object.close();
                salida.close();
            } else {
                FileInputStream entrada = new FileInputStream(archivo);
                ObjectInputStream object = new ObjectInputStream(entrada);
                Pokemon temp;
                ArrayList<Pokemon> pokemon_atrapado = new ArrayList<Pokemon>();
                try {
                    while ((temp = (Pokemon) object.readObject()) != null) {
                        pokemon_atrapado.add(temp);
                    }
                } catch (Exception ex) {

                } finally {
                    entrada.close();
                    object.close();
                }

                FileOutputStream salida = new FileOutputStream(archivo);
                ObjectOutputStream objectt = new ObjectOutputStream(salida);
                for (int i = 0; i < pokemon_atrapado.size(); i++) {
                    objectt.writeObject(pokemon_atrapado.get(i));
                }
                objectt.flush();
                salida.close();
                object.close();

            }

        } catch (Exception ex) {

        } finally {
            JOptionPane.showMessageDialog(this, "El pokedex se ha actualizado");

        }

        try {
            archivo = new File("./src/Recursos/Mochila.bin");

            if (!archivo.exists()) {
                FileOutputStream salida = new FileOutputStream(archivo);
                ObjectOutputStream object = new ObjectOutputStream(salida);
                for (int i = 0; i < objeto.size(); i++) {
                    if (i == objeto.size()) {
                        objeto.get(i).setCantidad(31);
                    } else {
                        object.writeObject(objeto.get(i));
                    }
                }
                object.flush();
                object.close();
                salida.close();

            } else {
                FileInputStream entrada = new FileInputStream(archivo);
                ObjectInputStream object = new ObjectInputStream(entrada);
                Objeto temp;
                try {
                    while ((temp = (Objeto) object.readObject()) != null) {
                        mochila.add(temp);
                    }
                } catch (Exception ex) {

                } finally {
                    entrada.close();
                    object.close();
                }
//                mochila.get(mochila.size() - 1).setCantidad(mochila.get(mochila.size() - 1).getCantidad() + 30);
//                FileOutputStream salida = new FileOutputStream(archivo);
//                ObjectOutputStream objects = new ObjectOutputStream(salida);
//                ObjectOutputStream obj = new ObjectOutputStream(salida);
//                for (int i = 0; i < objeto.size(); i++) {
//                    obj.writeObject(objeto.get(i));
//                }
//                objects.flush();
//                salida.close();
//                object.close();

            }

            for (int i = 0; i < mochila.size(); i++) {
                System.out.println(mochila.get(i));
            }

        } catch (Exception ex) {

        } finally {
            JOptionPane.showMessageDialog(this, "La Mochilla se ha llenado.");

        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Batalla;
    private javax.swing.JButton Iniciar;
    private javax.swing.JButton Leer;
    private javax.swing.JDialog Pokedex;
    private javax.swing.JDialog Reporte;
    private javax.swing.JTextArea area;
    private javax.swing.JButton bola;
    private javax.swing.JButton comida;
    private javax.swing.JTextField hp;
    private javax.swing.JLabel imagen;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nivel;
    private javax.swing.JTextField nombre;
    private javax.swing.JMenu opcion;
    private javax.swing.JButton roca;
    private javax.swing.JButton run;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla1;
    // End of variables declaration//GEN-END:variables
    ArrayList<Pokemon> pokemon = new ArrayList();
    ArrayList<Ataques> ataque = new ArrayList();
    ArrayList<Objeto> objeto = new ArrayList();
    ArrayList<Ataques> temporal = new ArrayList();
    ArrayList<Pokemon> pokemon_atrapado = new ArrayList();
    ArrayList<Objeto> mochila = new ArrayList<Objeto>();
    int BE = 1;
    int batalla = 0;
}
